{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "76688702-c353-4132-9414-4dc6da06160d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Filename</th>\n",
       "      <th>Label</th>\n",
       "      <th>f0</th>\n",
       "      <th>f1</th>\n",
       "      <th>f2</th>\n",
       "      <th>f3</th>\n",
       "      <th>f4</th>\n",
       "      <th>f5</th>\n",
       "      <th>f6</th>\n",
       "      <th>f7</th>\n",
       "      <th>...</th>\n",
       "      <th>f190</th>\n",
       "      <th>f191</th>\n",
       "      <th>f192</th>\n",
       "      <th>f193</th>\n",
       "      <th>f194</th>\n",
       "      <th>f195</th>\n",
       "      <th>f196</th>\n",
       "      <th>f197</th>\n",
       "      <th>f198</th>\n",
       "      <th>f199</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.png</td>\n",
       "      <td>2</td>\n",
       "      <td>50.557468</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>316.271667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>239.577011</td>\n",
       "      <td>277.834534</td>\n",
       "      <td>205.776398</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>91.438698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10.jpg.png</td>\n",
       "      <td>2</td>\n",
       "      <td>125.256027</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>48.989120</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1317.333740</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000.075012</td>\n",
       "      <td>1118.496948</td>\n",
       "      <td>1030.366699</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>297.483124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10.png</td>\n",
       "      <td>2</td>\n",
       "      <td>50.160606</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>330.470978</td>\n",
       "      <td>0.0</td>\n",
       "      <td>251.886398</td>\n",
       "      <td>288.062134</td>\n",
       "      <td>220.889481</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>93.795654</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100.png</td>\n",
       "      <td>2</td>\n",
       "      <td>63.720730</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>442.839233</td>\n",
       "      <td>0.0</td>\n",
       "      <td>345.145599</td>\n",
       "      <td>389.100678</td>\n",
       "      <td>304.433990</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>117.381721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10091.jpg</td>\n",
       "      <td>2</td>\n",
       "      <td>64.484604</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>37.368713</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>835.147400</td>\n",
       "      <td>0.0</td>\n",
       "      <td>649.643616</td>\n",
       "      <td>693.101868</td>\n",
       "      <td>690.640564</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>159.916016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3248</th>\n",
       "      <td>patch_84.jpg.png</td>\n",
       "      <td>2</td>\n",
       "      <td>283.005707</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>73.068192</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2643.636230</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2036.106934</td>\n",
       "      <td>2269.582275</td>\n",
       "      <td>1973.414917</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>657.907715</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3249</th>\n",
       "      <td>patch_85.jpg.png</td>\n",
       "      <td>2</td>\n",
       "      <td>609.193603</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>131.018112</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>5950.206055</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4727.840820</td>\n",
       "      <td>5170.731934</td>\n",
       "      <td>4594.757324</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1362.733398</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3250</th>\n",
       "      <td>patch_86.jpg.png</td>\n",
       "      <td>2</td>\n",
       "      <td>781.789490</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>174.997360</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>7535.423828</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5972.883789</td>\n",
       "      <td>6563.629883</td>\n",
       "      <td>5749.376465</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1758.735840</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3251</th>\n",
       "      <td>patch_87.jpg.png</td>\n",
       "      <td>2</td>\n",
       "      <td>688.966675</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>206.603851</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>7119.000977</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5575.274414</td>\n",
       "      <td>6160.208984</td>\n",
       "      <td>5423.260742</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1670.340088</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3252</th>\n",
       "      <td>patch_9.jpg.png</td>\n",
       "      <td>2</td>\n",
       "      <td>180.310455</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>81.433441</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1922.478027</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1477.720093</td>\n",
       "      <td>1617.056763</td>\n",
       "      <td>1526.339966</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>408.525330</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3253 rows × 202 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              Filename  Label          f0   f1   f2   f3   f4   f5  \\\n",
       "0                1.png      2   50.557468  0.0  0.0  0.0  0.0  0.0   \n",
       "1           10.jpg.png      2  125.256027  0.0  0.0  0.0  0.0  0.0   \n",
       "2               10.png      2   50.160606  0.0  0.0  0.0  0.0  0.0   \n",
       "3              100.png      2   63.720730  0.0  0.0  0.0  0.0  0.0   \n",
       "4            10091.jpg      2   64.484604  0.0  0.0  0.0  0.0  0.0   \n",
       "...                ...    ...         ...  ...  ...  ...  ...  ...   \n",
       "3248  patch_84.jpg.png      2  283.005707  0.0  0.0  0.0  0.0  0.0   \n",
       "3249  patch_85.jpg.png      2  609.193603  0.0  0.0  0.0  0.0  0.0   \n",
       "3250  patch_86.jpg.png      2  781.789490  0.0  0.0  0.0  0.0  0.0   \n",
       "3251  patch_87.jpg.png      2  688.966675  0.0  0.0  0.0  0.0  0.0   \n",
       "3252   patch_9.jpg.png      2  180.310455  0.0  0.0  0.0  0.0  0.0   \n",
       "\n",
       "              f6  f7  ...         f190  f191         f192         f193  \\\n",
       "0       0.000000   0  ...   316.271667   0.0   239.577011   277.834534   \n",
       "1      48.989120   0  ...  1317.333740   0.0  1000.075012  1118.496948   \n",
       "2       0.000000   0  ...   330.470978   0.0   251.886398   288.062134   \n",
       "3       0.000000   0  ...   442.839233   0.0   345.145599   389.100678   \n",
       "4      37.368713   0  ...   835.147400   0.0   649.643616   693.101868   \n",
       "...          ...  ..  ...          ...   ...          ...          ...   \n",
       "3248   73.068192   0  ...  2643.636230   0.0  2036.106934  2269.582275   \n",
       "3249  131.018112   0  ...  5950.206055   0.0  4727.840820  5170.731934   \n",
       "3250  174.997360   0  ...  7535.423828   0.0  5972.883789  6563.629883   \n",
       "3251  206.603851   0  ...  7119.000977   0.0  5575.274414  6160.208984   \n",
       "3252   81.433441   0  ...  1922.478027   0.0  1477.720093  1617.056763   \n",
       "\n",
       "             f194  f195  f196  f197  f198         f199  \n",
       "0      205.776398   0.0   0.0   0.0   0.0    91.438698  \n",
       "1     1030.366699   0.0   0.0   0.0   0.0   297.483124  \n",
       "2      220.889481   0.0   0.0   0.0   0.0    93.795654  \n",
       "3      304.433990   0.0   0.0   0.0   0.0   117.381721  \n",
       "4      690.640564   0.0   0.0   0.0   0.0   159.916016  \n",
       "...           ...   ...   ...   ...   ...          ...  \n",
       "3248  1973.414917   0.0   0.0   0.0   0.0   657.907715  \n",
       "3249  4594.757324   0.0   0.0   0.0   0.0  1362.733398  \n",
       "3250  5749.376465   0.0   0.0   0.0   0.0  1758.735840  \n",
       "3251  5423.260742   0.0   0.0   0.0   0.0  1670.340088  \n",
       "3252  1526.339966   0.0   0.0   0.0   0.0   408.525330  \n",
       "\n",
       "[3253 rows x 202 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "df=pd.read_csv(r\"C:\\Users\\gnani\\Downloads\\Custom_CNN_Features.csv\")\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e8b7f7f8-749d-4096-815a-68d22feaf087",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ImageName</th>\n",
       "      <th>Label</th>\n",
       "      <th>Theta0_Lambda1_LocalEnergy</th>\n",
       "      <th>Theta0_Lambda1_MeanAmplitude</th>\n",
       "      <th>Theta0_Lambda0_LocalEnergy</th>\n",
       "      <th>Theta0_Lambda0_MeanAmplitude</th>\n",
       "      <th>Theta0_Lambda0_LocalEnergy.1</th>\n",
       "      <th>Theta0_Lambda0_MeanAmplitude.1</th>\n",
       "      <th>Theta0_Lambda0_LocalEnergy.2</th>\n",
       "      <th>Theta0_Lambda0_MeanAmplitude.2</th>\n",
       "      <th>...</th>\n",
       "      <th>Theta0_Lambda1_LocalEnergy.3</th>\n",
       "      <th>Theta0_Lambda1_MeanAmplitude.3</th>\n",
       "      <th>Theta0_Lambda0_LocalEnergy.12</th>\n",
       "      <th>Theta0_Lambda0_MeanAmplitude.12</th>\n",
       "      <th>Theta0_Lambda0_LocalEnergy.13</th>\n",
       "      <th>Theta0_Lambda0_MeanAmplitude.13</th>\n",
       "      <th>Theta0_Lambda0_LocalEnergy.14</th>\n",
       "      <th>Theta0_Lambda0_MeanAmplitude.14</th>\n",
       "      <th>Theta0_Lambda0_LocalEnergy.15</th>\n",
       "      <th>Theta0_Lambda0_MeanAmplitude.15</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.png</td>\n",
       "      <td>bad</td>\n",
       "      <td>129313</td>\n",
       "      <td>513012</td>\n",
       "      <td>14458234</td>\n",
       "      <td>9114620</td>\n",
       "      <td>134398</td>\n",
       "      <td>129313</td>\n",
       "      <td>513012</td>\n",
       "      <td>14458234</td>\n",
       "      <td>...</td>\n",
       "      <td>32703634</td>\n",
       "      <td>32684724</td>\n",
       "      <td>20141262</td>\n",
       "      <td>10404019</td>\n",
       "      <td>11006827</td>\n",
       "      <td>32703610</td>\n",
       "      <td>32684624</td>\n",
       "      <td>20141172</td>\n",
       "      <td>10404066</td>\n",
       "      <td>11006997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10.jpg.png</td>\n",
       "      <td>bad</td>\n",
       "      <td>6617146</td>\n",
       "      <td>14997906</td>\n",
       "      <td>8035480</td>\n",
       "      <td>13608074</td>\n",
       "      <td>13285935</td>\n",
       "      <td>6617146</td>\n",
       "      <td>14997906</td>\n",
       "      <td>8035480</td>\n",
       "      <td>...</td>\n",
       "      <td>39791512</td>\n",
       "      <td>31045571</td>\n",
       "      <td>18809207</td>\n",
       "      <td>9704705</td>\n",
       "      <td>10267446</td>\n",
       "      <td>39787302</td>\n",
       "      <td>31038616</td>\n",
       "      <td>18809029</td>\n",
       "      <td>9704819</td>\n",
       "      <td>10267297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10.png</td>\n",
       "      <td>bad</td>\n",
       "      <td>122742</td>\n",
       "      <td>1229139</td>\n",
       "      <td>13119582</td>\n",
       "      <td>11641769</td>\n",
       "      <td>123914</td>\n",
       "      <td>122742</td>\n",
       "      <td>1229139</td>\n",
       "      <td>13119582</td>\n",
       "      <td>...</td>\n",
       "      <td>31052742</td>\n",
       "      <td>31014006</td>\n",
       "      <td>18489612</td>\n",
       "      <td>9539999</td>\n",
       "      <td>10093207</td>\n",
       "      <td>31052751</td>\n",
       "      <td>31013240</td>\n",
       "      <td>18489683</td>\n",
       "      <td>9540061</td>\n",
       "      <td>10093198</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100.png</td>\n",
       "      <td>bad</td>\n",
       "      <td>6513169</td>\n",
       "      <td>10490119</td>\n",
       "      <td>7403498</td>\n",
       "      <td>9218975</td>\n",
       "      <td>9374982</td>\n",
       "      <td>6513169</td>\n",
       "      <td>10490119</td>\n",
       "      <td>7403498</td>\n",
       "      <td>...</td>\n",
       "      <td>22689380</td>\n",
       "      <td>16254006</td>\n",
       "      <td>8676389</td>\n",
       "      <td>4477005</td>\n",
       "      <td>4736233</td>\n",
       "      <td>22688966</td>\n",
       "      <td>16253525</td>\n",
       "      <td>8676331</td>\n",
       "      <td>4476659</td>\n",
       "      <td>4736218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10091.jpg</td>\n",
       "      <td>bad</td>\n",
       "      <td>22110239</td>\n",
       "      <td>25899722</td>\n",
       "      <td>29286201</td>\n",
       "      <td>27478609</td>\n",
       "      <td>21287873</td>\n",
       "      <td>22110239</td>\n",
       "      <td>25899722</td>\n",
       "      <td>29286201</td>\n",
       "      <td>...</td>\n",
       "      <td>38873677</td>\n",
       "      <td>28878965</td>\n",
       "      <td>16200628</td>\n",
       "      <td>8359022</td>\n",
       "      <td>8843458</td>\n",
       "      <td>38869625</td>\n",
       "      <td>28875208</td>\n",
       "      <td>16200694</td>\n",
       "      <td>8358873</td>\n",
       "      <td>8843308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3248</th>\n",
       "      <td>MaI858_Page5.jpg.png</td>\n",
       "      <td>medium</td>\n",
       "      <td>896197</td>\n",
       "      <td>2770865</td>\n",
       "      <td>22873619</td>\n",
       "      <td>5032723</td>\n",
       "      <td>1158883</td>\n",
       "      <td>896197</td>\n",
       "      <td>2770865</td>\n",
       "      <td>22873619</td>\n",
       "      <td>...</td>\n",
       "      <td>49637721</td>\n",
       "      <td>48981468</td>\n",
       "      <td>32502503</td>\n",
       "      <td>16771367</td>\n",
       "      <td>17743059</td>\n",
       "      <td>49636691</td>\n",
       "      <td>48946453</td>\n",
       "      <td>32502489</td>\n",
       "      <td>16771992</td>\n",
       "      <td>17743516</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3249</th>\n",
       "      <td>MaI858_Page6.jpg.png</td>\n",
       "      <td>medium</td>\n",
       "      <td>1064548</td>\n",
       "      <td>5141839</td>\n",
       "      <td>23214276</td>\n",
       "      <td>11290257</td>\n",
       "      <td>1351183</td>\n",
       "      <td>1064548</td>\n",
       "      <td>5141839</td>\n",
       "      <td>23214276</td>\n",
       "      <td>...</td>\n",
       "      <td>49469805</td>\n",
       "      <td>48353075</td>\n",
       "      <td>29608996</td>\n",
       "      <td>15278102</td>\n",
       "      <td>16163468</td>\n",
       "      <td>49467205</td>\n",
       "      <td>48324279</td>\n",
       "      <td>29609043</td>\n",
       "      <td>15278137</td>\n",
       "      <td>16163626</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3250</th>\n",
       "      <td>MaI858_Page7.jpg.png</td>\n",
       "      <td>medium</td>\n",
       "      <td>1174990</td>\n",
       "      <td>5643464</td>\n",
       "      <td>20957455</td>\n",
       "      <td>18885511</td>\n",
       "      <td>1487485</td>\n",
       "      <td>1174990</td>\n",
       "      <td>5643464</td>\n",
       "      <td>20957455</td>\n",
       "      <td>...</td>\n",
       "      <td>49919367</td>\n",
       "      <td>48787687</td>\n",
       "      <td>28848601</td>\n",
       "      <td>14885815</td>\n",
       "      <td>15748587</td>\n",
       "      <td>49912346</td>\n",
       "      <td>48771248</td>\n",
       "      <td>28848281</td>\n",
       "      <td>14886016</td>\n",
       "      <td>15748858</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3251</th>\n",
       "      <td>MaI858_Page8.jpg.png</td>\n",
       "      <td>medium</td>\n",
       "      <td>1331040</td>\n",
       "      <td>19429773</td>\n",
       "      <td>22593587</td>\n",
       "      <td>21945829</td>\n",
       "      <td>1903642</td>\n",
       "      <td>1331040</td>\n",
       "      <td>19429773</td>\n",
       "      <td>22593587</td>\n",
       "      <td>...</td>\n",
       "      <td>49737203</td>\n",
       "      <td>46367653</td>\n",
       "      <td>25467374</td>\n",
       "      <td>13141242</td>\n",
       "      <td>13902957</td>\n",
       "      <td>49723981</td>\n",
       "      <td>46356305</td>\n",
       "      <td>25467373</td>\n",
       "      <td>13141471</td>\n",
       "      <td>13903328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3252</th>\n",
       "      <td>MaI858_Page9.jpg.png</td>\n",
       "      <td>medium</td>\n",
       "      <td>1508039</td>\n",
       "      <td>22021155</td>\n",
       "      <td>22487567</td>\n",
       "      <td>21444118</td>\n",
       "      <td>2185447</td>\n",
       "      <td>1508039</td>\n",
       "      <td>22021155</td>\n",
       "      <td>22487567</td>\n",
       "      <td>...</td>\n",
       "      <td>49832190</td>\n",
       "      <td>44762971</td>\n",
       "      <td>23984475</td>\n",
       "      <td>12376232</td>\n",
       "      <td>13093907</td>\n",
       "      <td>49816235</td>\n",
       "      <td>44760464</td>\n",
       "      <td>23984322</td>\n",
       "      <td>12376975</td>\n",
       "      <td>13094131</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3253 rows × 52 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                 ImageName   Label  Theta0_Lambda1_LocalEnergy  \\\n",
       "0                    1.png     bad                      129313   \n",
       "1               10.jpg.png     bad                     6617146   \n",
       "2                   10.png     bad                      122742   \n",
       "3                  100.png     bad                     6513169   \n",
       "4                10091.jpg     bad                    22110239   \n",
       "...                    ...     ...                         ...   \n",
       "3248  MaI858_Page5.jpg.png  medium                      896197   \n",
       "3249  MaI858_Page6.jpg.png  medium                     1064548   \n",
       "3250  MaI858_Page7.jpg.png  medium                     1174990   \n",
       "3251  MaI858_Page8.jpg.png  medium                     1331040   \n",
       "3252  MaI858_Page9.jpg.png  medium                     1508039   \n",
       "\n",
       "      Theta0_Lambda1_MeanAmplitude  Theta0_Lambda0_LocalEnergy  \\\n",
       "0                           513012                    14458234   \n",
       "1                         14997906                     8035480   \n",
       "2                          1229139                    13119582   \n",
       "3                         10490119                     7403498   \n",
       "4                         25899722                    29286201   \n",
       "...                            ...                         ...   \n",
       "3248                       2770865                    22873619   \n",
       "3249                       5141839                    23214276   \n",
       "3250                       5643464                    20957455   \n",
       "3251                      19429773                    22593587   \n",
       "3252                      22021155                    22487567   \n",
       "\n",
       "      Theta0_Lambda0_MeanAmplitude  Theta0_Lambda0_LocalEnergy.1  \\\n",
       "0                          9114620                        134398   \n",
       "1                         13608074                      13285935   \n",
       "2                         11641769                        123914   \n",
       "3                          9218975                       9374982   \n",
       "4                         27478609                      21287873   \n",
       "...                            ...                           ...   \n",
       "3248                       5032723                       1158883   \n",
       "3249                      11290257                       1351183   \n",
       "3250                      18885511                       1487485   \n",
       "3251                      21945829                       1903642   \n",
       "3252                      21444118                       2185447   \n",
       "\n",
       "      Theta0_Lambda0_MeanAmplitude.1  Theta0_Lambda0_LocalEnergy.2  \\\n",
       "0                             129313                        513012   \n",
       "1                            6617146                      14997906   \n",
       "2                             122742                       1229139   \n",
       "3                            6513169                      10490119   \n",
       "4                           22110239                      25899722   \n",
       "...                              ...                           ...   \n",
       "3248                          896197                       2770865   \n",
       "3249                         1064548                       5141839   \n",
       "3250                         1174990                       5643464   \n",
       "3251                         1331040                      19429773   \n",
       "3252                         1508039                      22021155   \n",
       "\n",
       "      Theta0_Lambda0_MeanAmplitude.2  ...  Theta0_Lambda1_LocalEnergy.3  \\\n",
       "0                           14458234  ...                      32703634   \n",
       "1                            8035480  ...                      39791512   \n",
       "2                           13119582  ...                      31052742   \n",
       "3                            7403498  ...                      22689380   \n",
       "4                           29286201  ...                      38873677   \n",
       "...                              ...  ...                           ...   \n",
       "3248                        22873619  ...                      49637721   \n",
       "3249                        23214276  ...                      49469805   \n",
       "3250                        20957455  ...                      49919367   \n",
       "3251                        22593587  ...                      49737203   \n",
       "3252                        22487567  ...                      49832190   \n",
       "\n",
       "      Theta0_Lambda1_MeanAmplitude.3  Theta0_Lambda0_LocalEnergy.12  \\\n",
       "0                           32684724                       20141262   \n",
       "1                           31045571                       18809207   \n",
       "2                           31014006                       18489612   \n",
       "3                           16254006                        8676389   \n",
       "4                           28878965                       16200628   \n",
       "...                              ...                            ...   \n",
       "3248                        48981468                       32502503   \n",
       "3249                        48353075                       29608996   \n",
       "3250                        48787687                       28848601   \n",
       "3251                        46367653                       25467374   \n",
       "3252                        44762971                       23984475   \n",
       "\n",
       "      Theta0_Lambda0_MeanAmplitude.12  Theta0_Lambda0_LocalEnergy.13  \\\n",
       "0                            10404019                       11006827   \n",
       "1                             9704705                       10267446   \n",
       "2                             9539999                       10093207   \n",
       "3                             4477005                        4736233   \n",
       "4                             8359022                        8843458   \n",
       "...                               ...                            ...   \n",
       "3248                         16771367                       17743059   \n",
       "3249                         15278102                       16163468   \n",
       "3250                         14885815                       15748587   \n",
       "3251                         13141242                       13902957   \n",
       "3252                         12376232                       13093907   \n",
       "\n",
       "      Theta0_Lambda0_MeanAmplitude.13  Theta0_Lambda0_LocalEnergy.14  \\\n",
       "0                            32703610                       32684624   \n",
       "1                            39787302                       31038616   \n",
       "2                            31052751                       31013240   \n",
       "3                            22688966                       16253525   \n",
       "4                            38869625                       28875208   \n",
       "...                               ...                            ...   \n",
       "3248                         49636691                       48946453   \n",
       "3249                         49467205                       48324279   \n",
       "3250                         49912346                       48771248   \n",
       "3251                         49723981                       46356305   \n",
       "3252                         49816235                       44760464   \n",
       "\n",
       "      Theta0_Lambda0_MeanAmplitude.14  Theta0_Lambda0_LocalEnergy.15  \\\n",
       "0                            20141172                       10404066   \n",
       "1                            18809029                        9704819   \n",
       "2                            18489683                        9540061   \n",
       "3                             8676331                        4476659   \n",
       "4                            16200694                        8358873   \n",
       "...                               ...                            ...   \n",
       "3248                         32502489                       16771992   \n",
       "3249                         29609043                       15278137   \n",
       "3250                         28848281                       14886016   \n",
       "3251                         25467373                       13141471   \n",
       "3252                         23984322                       12376975   \n",
       "\n",
       "      Theta0_Lambda0_MeanAmplitude.15  \n",
       "0                            11006997  \n",
       "1                            10267297  \n",
       "2                            10093198  \n",
       "3                             4736218  \n",
       "4                             8843308  \n",
       "...                               ...  \n",
       "3248                         17743516  \n",
       "3249                         16163626  \n",
       "3250                         15748858  \n",
       "3251                         13903328  \n",
       "3252                         13094131  \n",
       "\n",
       "[3253 rows x 52 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1=pd.read_csv(r\"C:\\Users\\gnani\\Downloads\\palm_document_Gabor.csv\")\n",
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e7cd3c5a-4601-455e-9fe2-92bc8d419bfe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Label</th>\n",
       "      <th>f0</th>\n",
       "      <th>f1</th>\n",
       "      <th>f2</th>\n",
       "      <th>f3</th>\n",
       "      <th>f4</th>\n",
       "      <th>f5</th>\n",
       "      <th>f6</th>\n",
       "      <th>f7</th>\n",
       "      <th>f8</th>\n",
       "      <th>...</th>\n",
       "      <th>f190</th>\n",
       "      <th>f191</th>\n",
       "      <th>f192</th>\n",
       "      <th>f193</th>\n",
       "      <th>f194</th>\n",
       "      <th>f195</th>\n",
       "      <th>f196</th>\n",
       "      <th>f197</th>\n",
       "      <th>f198</th>\n",
       "      <th>f199</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>50.557468</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>414.879486</td>\n",
       "      <td>...</td>\n",
       "      <td>316.271667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>239.577011</td>\n",
       "      <td>277.834534</td>\n",
       "      <td>205.776398</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>91.438698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>125.256027</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>48.989120</td>\n",
       "      <td>0</td>\n",
       "      <td>1736.242432</td>\n",
       "      <td>...</td>\n",
       "      <td>1317.333740</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000.075012</td>\n",
       "      <td>1118.496948</td>\n",
       "      <td>1030.366699</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>297.483124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>50.160606</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>435.235992</td>\n",
       "      <td>...</td>\n",
       "      <td>330.470978</td>\n",
       "      <td>0.0</td>\n",
       "      <td>251.886398</td>\n",
       "      <td>288.062134</td>\n",
       "      <td>220.889481</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>93.795654</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>63.720730</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>588.439148</td>\n",
       "      <td>...</td>\n",
       "      <td>442.839233</td>\n",
       "      <td>0.0</td>\n",
       "      <td>345.145599</td>\n",
       "      <td>389.100678</td>\n",
       "      <td>304.433990</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>117.381721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>64.484604</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>37.368713</td>\n",
       "      <td>0</td>\n",
       "      <td>1080.826782</td>\n",
       "      <td>...</td>\n",
       "      <td>835.147400</td>\n",
       "      <td>0.0</td>\n",
       "      <td>649.643616</td>\n",
       "      <td>693.101868</td>\n",
       "      <td>690.640564</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>159.916016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3248</th>\n",
       "      <td>2</td>\n",
       "      <td>283.005707</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>73.068192</td>\n",
       "      <td>0</td>\n",
       "      <td>3528.416992</td>\n",
       "      <td>...</td>\n",
       "      <td>2643.636230</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2036.106934</td>\n",
       "      <td>2269.582275</td>\n",
       "      <td>1973.414917</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>657.907715</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3249</th>\n",
       "      <td>2</td>\n",
       "      <td>609.193603</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>131.018112</td>\n",
       "      <td>0</td>\n",
       "      <td>8026.524414</td>\n",
       "      <td>...</td>\n",
       "      <td>5950.206055</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4727.840820</td>\n",
       "      <td>5170.731934</td>\n",
       "      <td>4594.757324</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1362.733398</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3250</th>\n",
       "      <td>2</td>\n",
       "      <td>781.789490</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>174.997360</td>\n",
       "      <td>0</td>\n",
       "      <td>10129.193360</td>\n",
       "      <td>...</td>\n",
       "      <td>7535.423828</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5972.883789</td>\n",
       "      <td>6563.629883</td>\n",
       "      <td>5749.376465</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1758.735840</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3251</th>\n",
       "      <td>2</td>\n",
       "      <td>688.966675</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>206.603851</td>\n",
       "      <td>0</td>\n",
       "      <td>9555.453125</td>\n",
       "      <td>...</td>\n",
       "      <td>7119.000977</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5575.274414</td>\n",
       "      <td>6160.208984</td>\n",
       "      <td>5423.260742</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1670.340088</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3252</th>\n",
       "      <td>2</td>\n",
       "      <td>180.310455</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>81.433441</td>\n",
       "      <td>0</td>\n",
       "      <td>2559.565430</td>\n",
       "      <td>...</td>\n",
       "      <td>1922.478027</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1477.720093</td>\n",
       "      <td>1617.056763</td>\n",
       "      <td>1526.339966</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>408.525330</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3253 rows × 201 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Label          f0   f1   f2   f3   f4   f5          f6  f7  \\\n",
       "0         2   50.557468  0.0  0.0  0.0  0.0  0.0    0.000000   0   \n",
       "1         2  125.256027  0.0  0.0  0.0  0.0  0.0   48.989120   0   \n",
       "2         2   50.160606  0.0  0.0  0.0  0.0  0.0    0.000000   0   \n",
       "3         2   63.720730  0.0  0.0  0.0  0.0  0.0    0.000000   0   \n",
       "4         2   64.484604  0.0  0.0  0.0  0.0  0.0   37.368713   0   \n",
       "...     ...         ...  ...  ...  ...  ...  ...         ...  ..   \n",
       "3248      2  283.005707  0.0  0.0  0.0  0.0  0.0   73.068192   0   \n",
       "3249      2  609.193603  0.0  0.0  0.0  0.0  0.0  131.018112   0   \n",
       "3250      2  781.789490  0.0  0.0  0.0  0.0  0.0  174.997360   0   \n",
       "3251      2  688.966675  0.0  0.0  0.0  0.0  0.0  206.603851   0   \n",
       "3252      2  180.310455  0.0  0.0  0.0  0.0  0.0   81.433441   0   \n",
       "\n",
       "                f8  ...         f190  f191         f192         f193  \\\n",
       "0       414.879486  ...   316.271667   0.0   239.577011   277.834534   \n",
       "1      1736.242432  ...  1317.333740   0.0  1000.075012  1118.496948   \n",
       "2       435.235992  ...   330.470978   0.0   251.886398   288.062134   \n",
       "3       588.439148  ...   442.839233   0.0   345.145599   389.100678   \n",
       "4      1080.826782  ...   835.147400   0.0   649.643616   693.101868   \n",
       "...            ...  ...          ...   ...          ...          ...   \n",
       "3248   3528.416992  ...  2643.636230   0.0  2036.106934  2269.582275   \n",
       "3249   8026.524414  ...  5950.206055   0.0  4727.840820  5170.731934   \n",
       "3250  10129.193360  ...  7535.423828   0.0  5972.883789  6563.629883   \n",
       "3251   9555.453125  ...  7119.000977   0.0  5575.274414  6160.208984   \n",
       "3252   2559.565430  ...  1922.478027   0.0  1477.720093  1617.056763   \n",
       "\n",
       "             f194  f195  f196  f197  f198         f199  \n",
       "0      205.776398   0.0   0.0   0.0   0.0    91.438698  \n",
       "1     1030.366699   0.0   0.0   0.0   0.0   297.483124  \n",
       "2      220.889481   0.0   0.0   0.0   0.0    93.795654  \n",
       "3      304.433990   0.0   0.0   0.0   0.0   117.381721  \n",
       "4      690.640564   0.0   0.0   0.0   0.0   159.916016  \n",
       "...           ...   ...   ...   ...   ...          ...  \n",
       "3248  1973.414917   0.0   0.0   0.0   0.0   657.907715  \n",
       "3249  4594.757324   0.0   0.0   0.0   0.0  1362.733398  \n",
       "3250  5749.376465   0.0   0.0   0.0   0.0  1758.735840  \n",
       "3251  5423.260742   0.0   0.0   0.0   0.0  1670.340088  \n",
       "3252  1526.339966   0.0   0.0   0.0   0.0   408.525330  \n",
       "\n",
       "[3253 rows x 201 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=df.drop(columns=['Filename'])\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "14cfd9bc-045b-46a0-83e3-9a691c2d8d8a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Label</th>\n",
       "      <th>Theta0_Lambda1_LocalEnergy</th>\n",
       "      <th>Theta0_Lambda1_MeanAmplitude</th>\n",
       "      <th>Theta0_Lambda0_LocalEnergy</th>\n",
       "      <th>Theta0_Lambda0_MeanAmplitude</th>\n",
       "      <th>Theta0_Lambda0_LocalEnergy.1</th>\n",
       "      <th>Theta0_Lambda0_MeanAmplitude.1</th>\n",
       "      <th>Theta0_Lambda0_LocalEnergy.2</th>\n",
       "      <th>Theta0_Lambda0_MeanAmplitude.2</th>\n",
       "      <th>Theta0_Lambda0_LocalEnergy.3</th>\n",
       "      <th>...</th>\n",
       "      <th>Theta0_Lambda1_LocalEnergy.3</th>\n",
       "      <th>Theta0_Lambda1_MeanAmplitude.3</th>\n",
       "      <th>Theta0_Lambda0_LocalEnergy.12</th>\n",
       "      <th>Theta0_Lambda0_MeanAmplitude.12</th>\n",
       "      <th>Theta0_Lambda0_LocalEnergy.13</th>\n",
       "      <th>Theta0_Lambda0_MeanAmplitude.13</th>\n",
       "      <th>Theta0_Lambda0_LocalEnergy.14</th>\n",
       "      <th>Theta0_Lambda0_MeanAmplitude.14</th>\n",
       "      <th>Theta0_Lambda0_LocalEnergy.15</th>\n",
       "      <th>Theta0_Lambda0_MeanAmplitude.15</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>bad</td>\n",
       "      <td>129313</td>\n",
       "      <td>513012</td>\n",
       "      <td>14458234</td>\n",
       "      <td>9114620</td>\n",
       "      <td>134398</td>\n",
       "      <td>129313</td>\n",
       "      <td>513012</td>\n",
       "      <td>14458234</td>\n",
       "      <td>9114620</td>\n",
       "      <td>...</td>\n",
       "      <td>32703634</td>\n",
       "      <td>32684724</td>\n",
       "      <td>20141262</td>\n",
       "      <td>10404019</td>\n",
       "      <td>11006827</td>\n",
       "      <td>32703610</td>\n",
       "      <td>32684624</td>\n",
       "      <td>20141172</td>\n",
       "      <td>10404066</td>\n",
       "      <td>11006997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>bad</td>\n",
       "      <td>6617146</td>\n",
       "      <td>14997906</td>\n",
       "      <td>8035480</td>\n",
       "      <td>13608074</td>\n",
       "      <td>13285935</td>\n",
       "      <td>6617146</td>\n",
       "      <td>14997906</td>\n",
       "      <td>8035480</td>\n",
       "      <td>13608074</td>\n",
       "      <td>...</td>\n",
       "      <td>39791512</td>\n",
       "      <td>31045571</td>\n",
       "      <td>18809207</td>\n",
       "      <td>9704705</td>\n",
       "      <td>10267446</td>\n",
       "      <td>39787302</td>\n",
       "      <td>31038616</td>\n",
       "      <td>18809029</td>\n",
       "      <td>9704819</td>\n",
       "      <td>10267297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>bad</td>\n",
       "      <td>122742</td>\n",
       "      <td>1229139</td>\n",
       "      <td>13119582</td>\n",
       "      <td>11641769</td>\n",
       "      <td>123914</td>\n",
       "      <td>122742</td>\n",
       "      <td>1229139</td>\n",
       "      <td>13119582</td>\n",
       "      <td>11641769</td>\n",
       "      <td>...</td>\n",
       "      <td>31052742</td>\n",
       "      <td>31014006</td>\n",
       "      <td>18489612</td>\n",
       "      <td>9539999</td>\n",
       "      <td>10093207</td>\n",
       "      <td>31052751</td>\n",
       "      <td>31013240</td>\n",
       "      <td>18489683</td>\n",
       "      <td>9540061</td>\n",
       "      <td>10093198</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>bad</td>\n",
       "      <td>6513169</td>\n",
       "      <td>10490119</td>\n",
       "      <td>7403498</td>\n",
       "      <td>9218975</td>\n",
       "      <td>9374982</td>\n",
       "      <td>6513169</td>\n",
       "      <td>10490119</td>\n",
       "      <td>7403498</td>\n",
       "      <td>9218975</td>\n",
       "      <td>...</td>\n",
       "      <td>22689380</td>\n",
       "      <td>16254006</td>\n",
       "      <td>8676389</td>\n",
       "      <td>4477005</td>\n",
       "      <td>4736233</td>\n",
       "      <td>22688966</td>\n",
       "      <td>16253525</td>\n",
       "      <td>8676331</td>\n",
       "      <td>4476659</td>\n",
       "      <td>4736218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>bad</td>\n",
       "      <td>22110239</td>\n",
       "      <td>25899722</td>\n",
       "      <td>29286201</td>\n",
       "      <td>27478609</td>\n",
       "      <td>21287873</td>\n",
       "      <td>22110239</td>\n",
       "      <td>25899722</td>\n",
       "      <td>29286201</td>\n",
       "      <td>27478609</td>\n",
       "      <td>...</td>\n",
       "      <td>38873677</td>\n",
       "      <td>28878965</td>\n",
       "      <td>16200628</td>\n",
       "      <td>8359022</td>\n",
       "      <td>8843458</td>\n",
       "      <td>38869625</td>\n",
       "      <td>28875208</td>\n",
       "      <td>16200694</td>\n",
       "      <td>8358873</td>\n",
       "      <td>8843308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3248</th>\n",
       "      <td>medium</td>\n",
       "      <td>896197</td>\n",
       "      <td>2770865</td>\n",
       "      <td>22873619</td>\n",
       "      <td>5032723</td>\n",
       "      <td>1158883</td>\n",
       "      <td>896197</td>\n",
       "      <td>2770865</td>\n",
       "      <td>22873619</td>\n",
       "      <td>5032723</td>\n",
       "      <td>...</td>\n",
       "      <td>49637721</td>\n",
       "      <td>48981468</td>\n",
       "      <td>32502503</td>\n",
       "      <td>16771367</td>\n",
       "      <td>17743059</td>\n",
       "      <td>49636691</td>\n",
       "      <td>48946453</td>\n",
       "      <td>32502489</td>\n",
       "      <td>16771992</td>\n",
       "      <td>17743516</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3249</th>\n",
       "      <td>medium</td>\n",
       "      <td>1064548</td>\n",
       "      <td>5141839</td>\n",
       "      <td>23214276</td>\n",
       "      <td>11290257</td>\n",
       "      <td>1351183</td>\n",
       "      <td>1064548</td>\n",
       "      <td>5141839</td>\n",
       "      <td>23214276</td>\n",
       "      <td>11290257</td>\n",
       "      <td>...</td>\n",
       "      <td>49469805</td>\n",
       "      <td>48353075</td>\n",
       "      <td>29608996</td>\n",
       "      <td>15278102</td>\n",
       "      <td>16163468</td>\n",
       "      <td>49467205</td>\n",
       "      <td>48324279</td>\n",
       "      <td>29609043</td>\n",
       "      <td>15278137</td>\n",
       "      <td>16163626</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3250</th>\n",
       "      <td>medium</td>\n",
       "      <td>1174990</td>\n",
       "      <td>5643464</td>\n",
       "      <td>20957455</td>\n",
       "      <td>18885511</td>\n",
       "      <td>1487485</td>\n",
       "      <td>1174990</td>\n",
       "      <td>5643464</td>\n",
       "      <td>20957455</td>\n",
       "      <td>18885511</td>\n",
       "      <td>...</td>\n",
       "      <td>49919367</td>\n",
       "      <td>48787687</td>\n",
       "      <td>28848601</td>\n",
       "      <td>14885815</td>\n",
       "      <td>15748587</td>\n",
       "      <td>49912346</td>\n",
       "      <td>48771248</td>\n",
       "      <td>28848281</td>\n",
       "      <td>14886016</td>\n",
       "      <td>15748858</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3251</th>\n",
       "      <td>medium</td>\n",
       "      <td>1331040</td>\n",
       "      <td>19429773</td>\n",
       "      <td>22593587</td>\n",
       "      <td>21945829</td>\n",
       "      <td>1903642</td>\n",
       "      <td>1331040</td>\n",
       "      <td>19429773</td>\n",
       "      <td>22593587</td>\n",
       "      <td>21945829</td>\n",
       "      <td>...</td>\n",
       "      <td>49737203</td>\n",
       "      <td>46367653</td>\n",
       "      <td>25467374</td>\n",
       "      <td>13141242</td>\n",
       "      <td>13902957</td>\n",
       "      <td>49723981</td>\n",
       "      <td>46356305</td>\n",
       "      <td>25467373</td>\n",
       "      <td>13141471</td>\n",
       "      <td>13903328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3252</th>\n",
       "      <td>medium</td>\n",
       "      <td>1508039</td>\n",
       "      <td>22021155</td>\n",
       "      <td>22487567</td>\n",
       "      <td>21444118</td>\n",
       "      <td>2185447</td>\n",
       "      <td>1508039</td>\n",
       "      <td>22021155</td>\n",
       "      <td>22487567</td>\n",
       "      <td>21444118</td>\n",
       "      <td>...</td>\n",
       "      <td>49832190</td>\n",
       "      <td>44762971</td>\n",
       "      <td>23984475</td>\n",
       "      <td>12376232</td>\n",
       "      <td>13093907</td>\n",
       "      <td>49816235</td>\n",
       "      <td>44760464</td>\n",
       "      <td>23984322</td>\n",
       "      <td>12376975</td>\n",
       "      <td>13094131</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3253 rows × 51 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Label  Theta0_Lambda1_LocalEnergy  Theta0_Lambda1_MeanAmplitude  \\\n",
       "0        bad                      129313                        513012   \n",
       "1        bad                     6617146                      14997906   \n",
       "2        bad                      122742                       1229139   \n",
       "3        bad                     6513169                      10490119   \n",
       "4        bad                    22110239                      25899722   \n",
       "...      ...                         ...                           ...   \n",
       "3248  medium                      896197                       2770865   \n",
       "3249  medium                     1064548                       5141839   \n",
       "3250  medium                     1174990                       5643464   \n",
       "3251  medium                     1331040                      19429773   \n",
       "3252  medium                     1508039                      22021155   \n",
       "\n",
       "      Theta0_Lambda0_LocalEnergy  Theta0_Lambda0_MeanAmplitude  \\\n",
       "0                       14458234                       9114620   \n",
       "1                        8035480                      13608074   \n",
       "2                       13119582                      11641769   \n",
       "3                        7403498                       9218975   \n",
       "4                       29286201                      27478609   \n",
       "...                          ...                           ...   \n",
       "3248                    22873619                       5032723   \n",
       "3249                    23214276                      11290257   \n",
       "3250                    20957455                      18885511   \n",
       "3251                    22593587                      21945829   \n",
       "3252                    22487567                      21444118   \n",
       "\n",
       "      Theta0_Lambda0_LocalEnergy.1  Theta0_Lambda0_MeanAmplitude.1  \\\n",
       "0                           134398                          129313   \n",
       "1                         13285935                         6617146   \n",
       "2                           123914                          122742   \n",
       "3                          9374982                         6513169   \n",
       "4                         21287873                        22110239   \n",
       "...                            ...                             ...   \n",
       "3248                       1158883                          896197   \n",
       "3249                       1351183                         1064548   \n",
       "3250                       1487485                         1174990   \n",
       "3251                       1903642                         1331040   \n",
       "3252                       2185447                         1508039   \n",
       "\n",
       "      Theta0_Lambda0_LocalEnergy.2  Theta0_Lambda0_MeanAmplitude.2  \\\n",
       "0                           513012                        14458234   \n",
       "1                         14997906                         8035480   \n",
       "2                          1229139                        13119582   \n",
       "3                         10490119                         7403498   \n",
       "4                         25899722                        29286201   \n",
       "...                            ...                             ...   \n",
       "3248                       2770865                        22873619   \n",
       "3249                       5141839                        23214276   \n",
       "3250                       5643464                        20957455   \n",
       "3251                      19429773                        22593587   \n",
       "3252                      22021155                        22487567   \n",
       "\n",
       "      Theta0_Lambda0_LocalEnergy.3  ...  Theta0_Lambda1_LocalEnergy.3  \\\n",
       "0                          9114620  ...                      32703634   \n",
       "1                         13608074  ...                      39791512   \n",
       "2                         11641769  ...                      31052742   \n",
       "3                          9218975  ...                      22689380   \n",
       "4                         27478609  ...                      38873677   \n",
       "...                            ...  ...                           ...   \n",
       "3248                       5032723  ...                      49637721   \n",
       "3249                      11290257  ...                      49469805   \n",
       "3250                      18885511  ...                      49919367   \n",
       "3251                      21945829  ...                      49737203   \n",
       "3252                      21444118  ...                      49832190   \n",
       "\n",
       "      Theta0_Lambda1_MeanAmplitude.3  Theta0_Lambda0_LocalEnergy.12  \\\n",
       "0                           32684724                       20141262   \n",
       "1                           31045571                       18809207   \n",
       "2                           31014006                       18489612   \n",
       "3                           16254006                        8676389   \n",
       "4                           28878965                       16200628   \n",
       "...                              ...                            ...   \n",
       "3248                        48981468                       32502503   \n",
       "3249                        48353075                       29608996   \n",
       "3250                        48787687                       28848601   \n",
       "3251                        46367653                       25467374   \n",
       "3252                        44762971                       23984475   \n",
       "\n",
       "      Theta0_Lambda0_MeanAmplitude.12  Theta0_Lambda0_LocalEnergy.13  \\\n",
       "0                            10404019                       11006827   \n",
       "1                             9704705                       10267446   \n",
       "2                             9539999                       10093207   \n",
       "3                             4477005                        4736233   \n",
       "4                             8359022                        8843458   \n",
       "...                               ...                            ...   \n",
       "3248                         16771367                       17743059   \n",
       "3249                         15278102                       16163468   \n",
       "3250                         14885815                       15748587   \n",
       "3251                         13141242                       13902957   \n",
       "3252                         12376232                       13093907   \n",
       "\n",
       "      Theta0_Lambda0_MeanAmplitude.13  Theta0_Lambda0_LocalEnergy.14  \\\n",
       "0                            32703610                       32684624   \n",
       "1                            39787302                       31038616   \n",
       "2                            31052751                       31013240   \n",
       "3                            22688966                       16253525   \n",
       "4                            38869625                       28875208   \n",
       "...                               ...                            ...   \n",
       "3248                         49636691                       48946453   \n",
       "3249                         49467205                       48324279   \n",
       "3250                         49912346                       48771248   \n",
       "3251                         49723981                       46356305   \n",
       "3252                         49816235                       44760464   \n",
       "\n",
       "      Theta0_Lambda0_MeanAmplitude.14  Theta0_Lambda0_LocalEnergy.15  \\\n",
       "0                            20141172                       10404066   \n",
       "1                            18809029                        9704819   \n",
       "2                            18489683                        9540061   \n",
       "3                             8676331                        4476659   \n",
       "4                            16200694                        8358873   \n",
       "...                               ...                            ...   \n",
       "3248                         32502489                       16771992   \n",
       "3249                         29609043                       15278137   \n",
       "3250                         28848281                       14886016   \n",
       "3251                         25467373                       13141471   \n",
       "3252                         23984322                       12376975   \n",
       "\n",
       "      Theta0_Lambda0_MeanAmplitude.15  \n",
       "0                            11006997  \n",
       "1                            10267297  \n",
       "2                            10093198  \n",
       "3                             4736218  \n",
       "4                             8843308  \n",
       "...                               ...  \n",
       "3248                         17743516  \n",
       "3249                         16163626  \n",
       "3250                         15748858  \n",
       "3251                         13903328  \n",
       "3252                         13094131  \n",
       "\n",
       "[3253 rows x 51 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1=df1.drop(columns=['ImageName'])\n",
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "37d3a047-4147-4e48-9e28-3f939ffd0275",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "60c7778e-dbd2-424e-b463-0176175b98ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df.f190, df.f192,c =\"maroon\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "ae4c0209-f732-48b0-b937-9bb8f67583d1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df1.Theta0_Lambda1_LocalEnergy, df1.Theta0_Lambda0_MeanAmplitude,c =\"lightgreen\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "4ca1b8bf-d775-4db9-8055-1ce8b8c9916f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Coefficients: \n",
      " [ 1.13450788e-02  2.62726595e-03  3.64412071e-03 -9.46470262e-03\n",
      " -1.27650527e-02 -9.56030439e-03  3.28109244e-03  7.37447538e-12\n",
      "  1.60058551e-02 -1.47902488e-02 -9.52036621e-03 -1.07940548e-02\n",
      " -8.66029342e-01  8.99167973e-03  8.27282253e-13 -1.72191938e-03\n",
      "  1.64489814e-02 -3.42819734e-03  5.28230145e-03  7.73292995e-03\n",
      "  2.92672286e-03  3.00932335e-03  1.87106719e-03  1.80450466e-03\n",
      " -1.54628208e-02 -5.93396169e-03  2.06626776e-03 -2.13401801e-03\n",
      " -4.26276263e-04  5.22205965e-03  1.49270973e-02  1.76319758e-02\n",
      "  3.54328642e-02 -5.88985401e-03  7.54460239e-03 -5.01543980e-03\n",
      " -9.86801226e-05 -5.69220782e-03 -6.79424626e-03 -3.39485384e-15\n",
      " -6.13792550e-03  1.18239536e-02 -6.31964949e-03  3.73846359e-03\n",
      "  5.34449784e-03 -2.63329647e-03 -2.43731526e-02 -6.01868862e-03\n",
      "  7.35522754e-15  1.54576974e-03 -1.14397772e-02 -5.70702598e-02\n",
      " -2.68489902e-02  1.51050899e-02  4.60395611e-15  2.33580331e-04\n",
      " -8.93070598e-03 -1.11022302e-15  4.86092550e-04 -1.47807172e-02\n",
      "  8.03202103e-04 -6.10292811e-03 -3.95516953e-15  1.38777878e-17\n",
      "  9.51009488e-03  2.26273972e-03 -3.49650986e-03 -3.49720253e-15\n",
      "  7.38941858e-03  8.29635487e-03 -6.71220696e-03  1.02530306e-02\n",
      " -2.58479944e-03  1.22671445e-03 -5.00325334e-03  1.22526122e-02\n",
      "  1.82583510e-02  1.27187178e-02 -5.27355937e-16 -7.49098493e-03\n",
      " -3.69733749e-03  1.10204831e-02  5.71699819e-03 -1.38114001e-02\n",
      "  0.00000000e+00 -6.70873021e-03 -1.30071227e-02  4.14016397e-03\n",
      "  4.93847872e-03  1.38777878e-16 -1.11022302e-16 -6.58707287e-03\n",
      " -2.35922393e-16  7.63278329e-17 -3.27862737e-16  6.66001957e-03\n",
      " -1.72901530e-02 -4.58706514e-03 -1.67100675e-02  1.01163657e-02\n",
      " -5.84251513e-03  1.81388571e-03 -1.79962827e-03 -2.43908755e-04\n",
      " -1.03187499e-02  5.55111512e-17 -1.98500574e-03  1.17949453e-02\n",
      " -4.22708528e-03  1.22838644e-02 -1.01665449e-02 -6.69986910e-03\n",
      "  1.53449313e-03  2.36407775e-03  2.57016583e-03 -6.67769133e-03\n",
      " -8.06502965e-03  9.85498946e-04  2.12596289e-04 -4.02793378e-03\n",
      "  7.91848091e-03  1.52535219e-02  2.66708636e-03  1.12757026e-17\n",
      "  1.20880095e-03  7.41254330e-03  2.71673463e-03  1.04383784e-02\n",
      "  2.94467265e-03 -1.40496891e-02  1.76237775e-02 -4.64120980e-03\n",
      "  5.96064193e-03 -3.18836860e-03  1.49816232e-02  1.36438917e-03\n",
      "  1.12448437e-02 -1.24513884e-03 -1.32165859e-02  3.02801140e-02\n",
      "  0.00000000e+00 -5.68770790e-03  0.00000000e+00 -1.60461922e-17\n",
      " -1.06507538e-02 -7.73934880e-03  5.23159049e-04  1.37875409e-03\n",
      "  8.46294526e-03 -7.06405007e-03 -7.35537611e-03 -1.01483355e-02\n",
      "  4.78435767e-03  1.35843806e-02 -3.46944695e-18  1.73472348e-18\n",
      "  1.01424657e-03  1.56071732e-02 -4.17004353e-04 -6.62723333e-03\n",
      "  6.50521303e-18  2.34386024e-03 -2.08239486e-02 -2.87771611e-02\n",
      "  1.20946810e-02 -4.50516141e-03 -1.57769318e-02  1.14581267e-02\n",
      " -7.06589998e-03 -9.40442579e-03 -1.10618921e-03  3.03250614e-03\n",
      "  0.00000000e+00 -1.20514155e-02 -9.12801698e-03  1.45962432e-03\n",
      "  3.95179711e-03  4.48937312e-03  0.00000000e+00  1.11379752e-02\n",
      "  1.02685686e-02 -1.20367765e-02  5.21098991e-03  1.11309626e-03\n",
      "  1.26251641e-03 -3.11429384e-01  3.45018492e-03 -7.35282676e-04\n",
      "  1.34570293e-02  1.02904107e-02 -4.11447374e-03  0.00000000e+00\n",
      " -6.14084386e-03 -7.97808964e-03  6.95076402e-03 -7.20531275e-03\n",
      "  8.76783152e-04 -5.72186103e-03  1.14664074e-02  5.72776133e-04]\n",
      "Mean squared error: 0.09\n",
      "Coefficient of determination: 0.82\n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "x and y must be the same size",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[31], line 29\u001b[0m\n\u001b[0;32m     26\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mCoefficient of determination: \u001b[39m\u001b[38;5;132;01m%.2f\u001b[39;00m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;241m%\u001b[39m r2_score(d_y_test, d_y_pred))\n\u001b[0;32m     28\u001b[0m \u001b[38;5;66;03m# Plot outputs\u001b[39;00m\n\u001b[1;32m---> 29\u001b[0m \u001b[43mplt\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mscatter\u001b[49m\u001b[43m(\u001b[49m\u001b[43md_X_test\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43md_y_test\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcolor\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mblack\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[0;32m     30\u001b[0m plt\u001b[38;5;241m.\u001b[39mplot(d_X_test, d_y_pred, color\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mblue\u001b[39m\u001b[38;5;124m\"\u001b[39m, linewidth\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m3\u001b[39m)\n\u001b[0;32m     32\u001b[0m plt\u001b[38;5;241m.\u001b[39mxticks(())\n",
      "File \u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\pyplot.py:2862\u001b[0m, in \u001b[0;36mscatter\u001b[1;34m(x, y, s, c, marker, cmap, norm, vmin, vmax, alpha, linewidths, edgecolors, plotnonfinite, data, **kwargs)\u001b[0m\n\u001b[0;32m   2857\u001b[0m \u001b[38;5;129m@_copy_docstring_and_deprecators\u001b[39m(Axes\u001b[38;5;241m.\u001b[39mscatter)\n\u001b[0;32m   2858\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mscatter\u001b[39m(\n\u001b[0;32m   2859\u001b[0m         x, y, s\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, c\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, marker\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, cmap\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, norm\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[0;32m   2860\u001b[0m         vmin\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, vmax\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, alpha\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, linewidths\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, \u001b[38;5;241m*\u001b[39m,\n\u001b[0;32m   2861\u001b[0m         edgecolors\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, plotnonfinite\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m, data\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[1;32m-> 2862\u001b[0m     __ret \u001b[38;5;241m=\u001b[39m \u001b[43mgca\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mscatter\u001b[49m\u001b[43m(\u001b[49m\n\u001b[0;32m   2863\u001b[0m \u001b[43m        \u001b[49m\u001b[43mx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43ms\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43ms\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mc\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mc\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmarker\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmarker\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcmap\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcmap\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mnorm\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mnorm\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   2864\u001b[0m \u001b[43m        \u001b[49m\u001b[43mvmin\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mvmin\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvmax\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mvmax\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43malpha\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43malpha\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlinewidths\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlinewidths\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   2865\u001b[0m \u001b[43m        \u001b[49m\u001b[43medgecolors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43medgecolors\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mplotnonfinite\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mplotnonfinite\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   2866\u001b[0m \u001b[43m        \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m{\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mdata\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mdata\u001b[49m\u001b[43m}\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mif\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mdata\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01mis\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;129;43;01mnot\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;28;43;01melse\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43m{\u001b[49m\u001b[43m}\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   2867\u001b[0m     sci(__ret)\n\u001b[0;32m   2868\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m __ret\n",
      "File \u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\__init__.py:1461\u001b[0m, in \u001b[0;36m_preprocess_data.<locals>.inner\u001b[1;34m(ax, data, *args, **kwargs)\u001b[0m\n\u001b[0;32m   1458\u001b[0m \u001b[38;5;129m@functools\u001b[39m\u001b[38;5;241m.\u001b[39mwraps(func)\n\u001b[0;32m   1459\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21minner\u001b[39m(ax, \u001b[38;5;241m*\u001b[39margs, data\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[0;32m   1460\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m data \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m-> 1461\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[43max\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;28;43mmap\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43msanitize_sequence\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43margs\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   1463\u001b[0m     bound \u001b[38;5;241m=\u001b[39m new_sig\u001b[38;5;241m.\u001b[39mbind(ax, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[0;32m   1464\u001b[0m     auto_label \u001b[38;5;241m=\u001b[39m (bound\u001b[38;5;241m.\u001b[39marguments\u001b[38;5;241m.\u001b[39mget(label_namer)\n\u001b[0;32m   1465\u001b[0m                   \u001b[38;5;129;01mor\u001b[39;00m bound\u001b[38;5;241m.\u001b[39mkwargs\u001b[38;5;241m.\u001b[39mget(label_namer))\n",
      "File \u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\axes\\_axes.py:4578\u001b[0m, in \u001b[0;36mAxes.scatter\u001b[1;34m(self, x, y, s, c, marker, cmap, norm, vmin, vmax, alpha, linewidths, edgecolors, plotnonfinite, **kwargs)\u001b[0m\n\u001b[0;32m   4576\u001b[0m y \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mma\u001b[38;5;241m.\u001b[39mravel(y)\n\u001b[0;32m   4577\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m x\u001b[38;5;241m.\u001b[39msize \u001b[38;5;241m!=\u001b[39m y\u001b[38;5;241m.\u001b[39msize:\n\u001b[1;32m-> 4578\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mx and y must be the same size\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m   4580\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m s \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   4581\u001b[0m     s \u001b[38;5;241m=\u001b[39m (\u001b[38;5;241m20\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m mpl\u001b[38;5;241m.\u001b[39mrcParams[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m_internal.classic_mode\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;28;01melse\u001b[39;00m\n\u001b[0;32m   4582\u001b[0m          mpl\u001b[38;5;241m.\u001b[39mrcParams[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mlines.markersize\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39m \u001b[38;5;241m2.0\u001b[39m)\n",
      "\u001b[1;31mValueError\u001b[0m: x and y must be the same size"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Code source: Jaques Grobler\n",
    "# License: BSD 3 clause\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "from sklearn import datasets, linear_model\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "\n",
    "# Load the diabetes dataset\n",
    "d_X = df.drop('Label', axis=1)  # Assuming 'Label' is the target variable\n",
    "d_y = df['Label']\n",
    "d_X_train, d_X_test, d_y_train, d_y_test = train_test_split(d_X, d_y, test_size=0.5)\n",
    "# Create linear regression object\n",
    "regr = linear_model.LinearRegression()\n",
    "\n",
    "# Train the model using the training sets\n",
    "regr.fit(d_X_train, d_y_train)\n",
    "\n",
    "# Make predictions using the testing set\n",
    "d_y_pred = regr.predict(d_X_test)\n",
    "\n",
    "# The coefficients\n",
    "print(\"Coefficients: \\n\", regr.coef_)\n",
    "# The mean squared error\n",
    "print(\"Mean squared error: %.2f\" % mean_squared_error(d_y_test, d_y_pred))\n",
    "# The coefficient of determination: 1 is perfect prediction\n",
    "print(\"Coefficient of determination: %.2f\" % r2_score(d_y_test, d_y_pred))\n",
    "\n",
    "# Plot outputs\n",
    "plt.scatter(d_X_test, d_y_test, color=\"black\")\n",
    "plt.plot(d_X_test, d_y_pred, color=\"blue\", linewidth=3)\n",
    "\n",
    "plt.xticks(())\n",
    "plt.yticks(())\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4694875d-6798-42d3-848f-0854fea576a1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Squared Error: 938.1153070105729\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import mean_squared_error\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Assume 'embed_1' is the independent variable\n",
    "independent_variable = df['f190']\n",
    "dependent_variable = df['f192']\n",
    "\n",
    "# Reshape the data as sklearn's LinearRegression model expects 2D array\n",
    "independent_variable = independent_variable.values.reshape(-1, 1)\n",
    "dependent_variable = dependent_variable.values.reshape(-1, 1)\n",
    "\n",
    "# Create a linear regression model\n",
    "model = LinearRegression()\n",
    "model.fit(independent_variable, dependent_variable)\n",
    "\n",
    "# Predict the values\n",
    "predicted_values = model.predict(independent_variable)\n",
    "\n",
    "# Calculate mean squared error\n",
    "mse = mean_squared_error(dependent_variable, predicted_values)\n",
    "print(f'Mean Squared Error: {mse}')\n",
    "\n",
    "# Create a scatter plot\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.scatter(independent_variable, dependent_variable, color='cyan', alpha=0.5)\n",
    "\n",
    "# Plot the regression line\n",
    "plt.plot(independent_variable, predicted_values, color='pink')\n",
    "\n",
    "# Add labels and title\n",
    "plt.xlabel('f0')\n",
    "plt.ylabel('f6')\n",
    "plt.title('regression between f190 vs f192')\n",
    "\n",
    "# Show plot\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "8212047c-d76b-481f-8214-c852ddb805a1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Squared Error: 1.205665291654671e+16\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import mean_squared_error\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Assume 'embed_1' is the independent variable\n",
    "independent_variable = df1['Theta0_Lambda1_LocalEnergy']\n",
    "dependent_variable = df1['Theta0_Lambda0_MeanAmplitude']\n",
    "\n",
    "# Reshape the data as sklearn's LinearRegression model expects 2D array\n",
    "independent_variable = independent_variable.values.reshape(-1, 1)\n",
    "dependent_variable = dependent_variable.values.reshape(-1, 1)\n",
    "\n",
    "# Create a linear regression model\n",
    "model = LinearRegression()\n",
    "model.fit(independent_variable, dependent_variable)\n",
    "\n",
    "# Predict the values\n",
    "predicted_values = model.predict(independent_variable)\n",
    "\n",
    "# Calculate mean squared error\n",
    "mse = mean_squared_error(dependent_variable, predicted_values)\n",
    "print(f'Mean Squared Error: {mse}')\n",
    "\n",
    "# Create a scatter plot\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.scatter(independent_variable, dependent_variable, color='cyan', alpha=0.5)\n",
    "\n",
    "# Plot the regression line\n",
    "plt.plot(independent_variable, predicted_values, color='pink')\n",
    "\n",
    "# Add labels and title\n",
    "plt.xlabel('f0')\n",
    "plt.ylabel('f6')\n",
    "plt.title('regression between f190 vs f192')\n",
    "\n",
    "# Show plot\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "b1b9949b-1512-4a94-9041-cd90ba6239ea",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Squared Error:  0.13759207551475655\n",
      "R-squared:  0.7345319080961625\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "\n",
    "# Split the dataset into features (X) and the target variable (y)\n",
    "X = df.drop('Label', axis=1)  # Assuming 'Label' is the target variable\n",
    "y = df['Label']\n",
    "\n",
    "# Split the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Create a Linear Regression model\n",
    "model = LinearRegression()\n",
    "\n",
    "# Train the model on the training data\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "# Make predictions on the test data\n",
    "y_pred = model.predict(X_test)\n",
    "\n",
    "# Calculate and print the model's performance metrics\n",
    "mse = mean_squared_error(y_test, y_pred)\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "\n",
    "print(\"Mean Squared Error: \", mse)\n",
    "print(\"R-squared: \", r2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "d280bfbf-3f1a-4148-a426-b7bc9ae6be5b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Square Error: 2369.4659157718174\n"
     ]
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import mean_squared_error\n",
    "\n",
    "# Create a linear regression model\n",
    "model = LinearRegression()\n",
    "ind=df['Label']\n",
    "dp=df['f0']\n",
    "# Use one feature as the independent variable and the other as the dependent variable\n",
    "X = ind.values.reshape(-1, 1)\n",
    "y = dp.values\n",
    "\n",
    "# Fit the model\n",
    "model.fit(X, y)\n",
    "\n",
    "# Predict values using the model\n",
    "y_pred = model.predict(X)\n",
    "\n",
    "# Calculate mean square error\n",
    "mse = mean_squared_error(y, y_pred)\n",
    "print(\"Mean Square Error:\", mse)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "55a7c42e-bba0-4969-a745-8cc088638991",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.9078341013824884\n"
     ]
    }
   ],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "# Load labeled data and create X and y\n",
    "X = df[['f10', 'f11']]\n",
    "y = df['Label']  # Replace 'target_column' with your actual target variable\n",
    "\n",
    "# Split the data into training and test sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Create a logistic regression model\n",
    "logistic_model = LogisticRegression()\n",
    "\n",
    "# Train the model on the training set\n",
    "logistic_model.fit(X_train, y_train)\n",
    "\n",
    "# Make predictions on the test set\n",
    "y_pred = logistic_model.predict(X_test)\n",
    "\n",
    "# Calculate accuracy\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "print(\"Accuracy:\", accuracy)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "340bdab3-c71c-45e9-9d2f-7af6ac79294d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "# Load your dataset, for example, using Pandas\n",
    "# Assuming you have a DataFrame with X (features) and y (target variable)\n",
    "X = df.drop(columns=['Label'])\n",
    "y = df['Label']\n",
    "\n",
    "# Split your dataset into training and test sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Decision Tree Regressor\n",
    "tree_regressor = DecisionTreeRegressor()\n",
    "tree_regressor.fit(X_train, y_train)\n",
    "y_tree_pred = tree_regressor.predict(X_test)\n",
    "\n",
    "# k-NN Regressor\n",
    "knn_regressor = KNeighborsRegressor(n_neighbors=5)\n",
    "knn_regressor.fit(X_train, y_train)\n",
    "y_knn_pred = knn_regressor.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "7386b645-35bd-4352-8d20-256db627a299",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Decision Tree Regressor:\n",
      "Mean Squared Error (MSE): 0.10291858678955453\n",
      "R-squared (R2): 0.8014304184725207\n",
      "k-NN Regressor:\n",
      "Mean Squared Error (MSE): 0.07262672811059909\n",
      "R-squared (R2): 0.8598750773937429\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Assuming you have already split your dataset into X_train, X_test, y_train, y_test as shown in your code\n",
    "\n",
    "# Decision Tree Regressor\n",
    "tree_regressor = DecisionTreeRegressor()\n",
    "tree_regressor.fit(X_train, y_train)\n",
    "y_tree_pred = tree_regressor.predict(X_test)\n",
    "\n",
    "# Calculate Mean Squared Error (MSE) for Decision Tree Regressor\n",
    "mse_tree = mean_squared_error(y_test, y_tree_pred)\n",
    "r2_tree = r2_score(y_test, y_tree_pred)\n",
    "\n",
    "print(\"Decision Tree Regressor:\")\n",
    "print(\"Mean Squared Error (MSE):\", mse_tree)\n",
    "print(\"R-squared (R2):\", r2_tree)\n",
    "\n",
    "# k-NN Regressor\n",
    "knn_regressor = KNeighborsRegressor(n_neighbors=5)\n",
    "knn_regressor.fit(X_train, y_train)\n",
    "y_knn_pred = knn_regressor.predict(X_test)\n",
    "\n",
    "# Calculate Mean Squared Error (MSE) for k-NN Regressor\n",
    "mse_knn = mean_squared_error(y_test, y_knn_pred)\n",
    "r2_knn = r2_score(y_test, y_knn_pred)\n",
    "\n",
    "print(\"k-NN Regressor:\")\n",
    "print(\"Mean Squared Error (MSE):\", mse_knn)\n",
    "print(\"R-squared (R2):\", r2_knn)\n",
    "\n",
    "# Optionally, you can also create scatter plots to visualize the predictions and actual values\n",
    "plt.figure(figsize=(12, 6))\n",
    "\n",
    "plt.subplot(1, 2, 1)\n",
    "plt.scatter(y_test, y_tree_pred, color='black')\n",
    "plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='yellow',)\n",
    "plt.xlabel('Actual Values')\n",
    "plt.ylabel('Predicted Values')\n",
    "plt.title('Decision Tree Regressor')\n",
    "\n",
    "plt.subplot(1, 2, 2)\n",
    "plt.scatter(y_test, y_knn_pred, color='black')\n",
    "plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='yellow',)\n",
    "plt.xlabel('Actual Values')\n",
    "plt.ylabel('Predicted Values')\n",
    "plt.title('k-NN Regressor')\n",
    "\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "645c9cb5-812f-4652-ba67-5504c4a6e8cd",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
